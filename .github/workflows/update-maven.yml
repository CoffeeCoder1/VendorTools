name: Update Maven repository and deploy

on:
  workflow_call:
    inputs:
      git-name:
        description: 'The name to use for git commits.'
        required: true
        type: string

      git-email:
        description: 'The email to use for git commits.'
        required: true
        type: string

      github-app-id:
        description: 'The app ID for the GitHub app used to authenticate with the GitHub API. Must have read access to the repository that you are downloading artifacts from.'
        required: true
        type: string

      artifact-repository:
        description: 'The GitHub repository to pull build artifacts from. Defaults to this repository.'
        default: '${{ github.repository }}'
        required: false
        type: string

      artifact-run-id:
        description: 'The ID of the workflow run where the desired download artifact was uploaded from. Defaults to this workflow run.'
        default: '${{ github.run_id }}'
        required: false
        type: string

      artifact-pattern:
        description: 'A glob pattern to the artifacts that should be downloaded.'
        default: 'build-outputs-*'
        required: false
        type: string

      release-version:
        description: 'The version of the library to release.'
        default: '${{ github.ref_name }}'
        required: false
        type: string

    secrets:
      github-app-private-key:
        description: 'The private key for the GitHub app used to authenticate with the GitHub API. Must have read access to the repository that you are downloading artifacts from.'
        required: true

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Generate an authentication token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-private-key }}
          # Set the owner, so the token can be used in all repositories
          owner: ${{ github.repository_owner }}

      - uses: CoffeeCoder1/VendorTools/.github/actions/publish@main
        with:
          artifact-pattern: ${{ inputs.artifact-pattern }}
          artifact-repository: ${{ inputs.artifact-repository }}
          artifact-run-id: ${{ inputs.artifact-run-id }}
          github-token: ${{ steps.app-token.outputs.token }}

      - name: Push updates to Git
        run: |
          git config --global user.name '${{ inputs.git-name }}'
          git config --global user.email '${{ inputs.git-email }}'
          git add repos/.
          git commit -m "Upgrading ${{ inputs.artifact-repository }} to ${{ inputs.release-version }}"
          git push

      - name: Upload Maven repository as an artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: repos/

  deploy-pages:
    needs: update

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
