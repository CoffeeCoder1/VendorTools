name: 'Publish Library'
description: 'Publishes the library to the local Maven repo.'

inputs:
  artifact-pattern:
    description: 'A glob pattern to the artifacts that should be downloaded.'
    default: 'build-outputs-*'
    required: false
    type: string

  artifact-repository:
    description: 'The repository owner and the repository name joined together by "/".'
    default: '${{ github.repository }}'
    required: false
    type: string

  artifact-run-id:
    description: 'The ID of the workflow run where the desired download artifact was uploaded from.'
    default: '${{ github.run_id }}'
    required: false
    type: string

  maven-repo-name:
    description: 'The name of the repo subdirectory to put the Maven repo in.'
    required: true
    type: string

  github-token:
      description: 'The GitHub token used to authenticate with the GitHub API. Must have read access to the repository that you are downloading artifacts from.'
      required: false
      type: string

runs:
  using: 'composite'
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: "17"
        distribution: "temurin"

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Download build outputs
      uses: actions/download-artifact@v4
      with:
        repository: ${{ inputs.artifact-repository }}
        run-id: ${{ inputs.artifact-run-id }}
        pattern: ${{ inputs.artifact-pattern }}
        path: build/products/build/allOutputs
        merge-multiple: true
        github-token: ${{ secrets.github-token }}

    - name: Publish with Gradle Wrapper
      run: ./gradlew publish
      env:
        releasesRepoName: ${{ inputs.maven-repo-name }}
